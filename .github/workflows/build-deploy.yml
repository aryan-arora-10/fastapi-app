name: Build and Deploy FastAPI app

on:
  push:
    branches:
      - main

jobs:
    testapp:
      environment: 
        name: testing
      env:
        DATABASE_HOST: ${{secrets.DATABASE_HOST}}
        DATABASE_PORT: ${{secrets.DATABASE_PORT}}
        DATABASE_PASSWORD: ${{secrets.DATABASE_PASSWORD}}
        DATABASE_NAME: ${{secrets.DATABASE_NAME}}
        DATABASE_NAME_TEST: ${{secrets.DATABASE_NAME_TEST}}
        DATABASE_USERNAME: ${{secrets.DATABASE_USERNAME}}
        SECRET_KEY: ${{secrets.SECRET_KEY}}
        ALGORITHM: ${{secrets.ALGORITHM}}
        ACCESS_TOKEN_EXPIRE_MINUTES: ${{secrets.ACCESS_TOKEN_EXPIRE_MINUTES}}
      
      runs-on: ubuntu-latest
      steps:
        - name: pulling the git repo
          uses: actions/checkout@v3
        # - name: installing python
        #   uses: actions/setup-python@v4
        #   with:
        #     python-version: "3.10"
        # - name: upgrade pip 
        #   run: python -m pip install --upgrade pip
        # - name: installing all dependencies
        #   run: pip install -r requirements.txt
        # - name: test with pytest
        #   run: |
        #     pip install pytest
        #     pytest
        #     echo "Pilot Test successful"

          
    deployapp:
      environment:
        name: prodfast
      needs: [testapp]
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v2
        - name: Set up SSH key
          uses: webfactory/ssh-agent@v0.5.3
          with:
            ssh-private-key: ${{secrets.SSH_KEY}}
            # ssh -o StrictHostKeyChecking=no -i {{ secrets.SSH_KEY}} {{secrets.EC2_USER}}@{{secrets.EC2_HOST}} 
        - name: SSH and Deploy
          run: |
            ssh -o StrictHostKeyChecking=no ${{secrets.EC2_USER}}@${{secrets.EC2_HOST}} << EOF
            cd app/src/
            git pull origin main
            docker compose -f docker-compose-prod.yaml down
            docker compose -f docker-compose-prod.yaml up -d
            echo "Deployment successful"
            EOF